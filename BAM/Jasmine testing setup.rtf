{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f4\fmodern\fprq1\fcharset0 Courier New;}{\f5\fnil\fprq0\fcharset0 Courier 10 Pitch{\*\falt Courier};}{\f6\fnil\fprq0\fcharset0 Monaco{\*\falt Consolas};}{\f7\froman\fprq2\fcharset128 Times New Roman;}{\f8\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f9\fmodern\fprq1\fcharset0 NSimSun;}{\f10\fnil\fprq2\fcharset0 Arial;}{\f11\fswiss\fprq0\fcharset128 Arial;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red51\green51\blue51;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033 Default;}
{\s1\sbasedon19\snext20\ilvl0\outlinelevel0\sb240\sa120\keepn\b\hich\af8\dbch\af10\afs32\ab\loch\f2\fs32 Heading 1;}
{\*\cs15\snext15\cf2\ul\ulc0\langfe255\lang255\lang255 Internet Link;}
{\*\cs16\snext16 Numbering Symbols;}
{\*\cs17\snext17\hich\af3\dbch\af3\loch\f3 Bullets;}
{\*\cs18\snext18\hich\af9\dbch\af4\loch\f4 Source Text;}
{\s19\sbasedon0\snext20\sb240\sa120\keepn\hich\af8\dbch\af10\afs28\loch\f2\fs28 Heading;}
{\s20\sbasedon0\snext20\sb0\sa120 Text body;}
{\s21\sbasedon20\snext21\sb0\sa120\dbch\af11 List;}
{\s22\sbasedon0\snext22\sb120\sa120\noline\i\dbch\af11\afs24\ai\fs24 Caption;}
{\s23\sbasedon0\snext23\noline\dbch\af11 Index;}
{\s24\sbasedon0\snext24\sb0\sa0\hich\af9\dbch\af4\afs20\loch\f4\fs20 Preformatted Text;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-432\li432}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-576\li576}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-720\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-864\li864}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1008\li1008}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1152\li1152}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1296\li1296}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1440\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1584\li1584}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f13\dbch\af3\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u57356 ?;}{\levelnumbers;}\f13\dbch\af3\fi-360\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-360\li1800}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-360\li2160}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-360\li2520}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-360\li2880}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-360\li3240}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-360\li3600}\listid2}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4130}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
\tab This document is to describe the setup used to make the Jasmine unit tests visible to sonarQube.  To be more specific, it describes the steps taken to resolve }{{\field{\*\fldinst HYPERLINK "https://github.com/RevatureBAM/BAMPhoenix/issues/497" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\lang255\rtlch \ltrch\loch
Issue 497}{\rtlch \ltrch\loch
}} in the RevatureBAM/BAMPhoenix repo.  First of all, the reason SonarQube could not see the tests was that they were not being run by Jenkins at all.  The existing testing setup was significantly altered to support this.  Most notably, the tests now run in headless chrome instead of PhantomJS.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s1\ilvl0\outlinelevel0\sb240\sa120\keepn\b\hich\af8\dbch\af10\afs32\ab\loch\f2\fs32{\listtext\pard\plain  \tab}\ls1 \li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
To run the tests:}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
If you only want to run the tests that already exist, then simply have maven perform a full build:}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
mvn clean install}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
\tab This should automatically perform the tests as part of the build process.  If necessary, this will also install node and the required modules to perform the test.  Once the tests have been run this way at least once, you can also perform just the tests without rebuilding the entire project by running this command in the BAM folder: }
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
./node_modules/gulp/bin/gulp.js test}
\par \pard\plain \s20\sb0\sa120{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
For the coverage report, see:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
BAM\\reports\\coverage\\lcov-report/index.html}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
For a more detailed breakdown of each individual test and their results, see:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
BAM\\HeadlessChrome_0.0.0_(Windows_10_0.0.0)\\reports\\junit\\TESTS-xunit.xml}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
Alternatively, SonarQube automatically includes these reports in its analysis, so you can look at them through that.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s1\ilvl0\outlinelevel0\sb240\sa120\keepn\b\hich\af8\dbch\af10\afs32\ab\loch\f2\fs32{\listtext\pard\plain  \tab}\ls1 \li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
How it was done:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
\tab This section describes how this process was setup.  These steps only have to be completed once for the entire project, and only by one person.  The process was heavily based on }{{\field{\*\fldinst HYPERLINK "https://blog.akquinet.de/2014/11/25/js-test-coverage/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\lang255\rtlch \ltrch\loch
this blog post}{\rtlch \ltrch\loch
}}, so you may find it helpful, but be warned that some steps differ.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  1.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
Install }{{\field{\*\fldinst HYPERLINK "http://nodejs.org/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\lang255\rtlch \ltrch\loch
Node.js}{\rtlch \ltrch\loch
}} and }{{\field{\*\fldinst HYPERLINK "https://www.npmjs.org/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\lang255\rtlch \ltrch\loch
npm}{\rtlch \ltrch\loch
}} if you haven't already.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  2.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
Create a package.json file in the root directory, in one of two ways:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
create a detailed file through the 'npm init'}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
provide a stub yourself, such as \{ \'93name\'94: \'93project-name\'94, \'93version\'94: \'930.0.1\'94 \}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  3.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
install the following dependencies with npm install --save-dev <dependency> }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
gulp}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
gulp-replace}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
jasmine}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
karma}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
karma-chrome-launcher}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
karma-coverage}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
karma-jasmine}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
karma-junit-reporter}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
anything else your project needs, such as 'angular' or 'angular-ui-bootstrap'}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  4.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
exclude the newly created node_modules folder from git, if it isn't already}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  5.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
configure karma in karma.conf.js.  }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
this is a large topic, but running 'karma init' walks you through most of it}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
the config file can live anywhere, but we put it in /src/test/.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
The existing karma.conf.js for this project is also heavily commented}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
these settings should be for general testing runs, performed manually, so feel free to use a visible browser if you want to.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  6.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
create a second config, 'karma.conf.ci.js', to override some settings in the previous one for testing runs that are to be done as part of continuous integration and as a maven build step}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
again, the existing config for this project is heavily commented}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
make sure that this config uses the 'ChromeHeadless' browser.  Jenkins does not seem to like PhantomJS}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
also make sure colors are off.  Jenkins will sometimes balk at those.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
Have git ignore whatever folders you put the reports in}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  7.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
if everything up to this point is working, you should be able to manually run tests in your terminal, and it should be generating reports for you.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
'}{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f6
./node_modules/karma/bin/karma start src/test/js/karma.conf.ci.js'}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  8.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f7
Create gulpfile.js in the project root.  This is the script that maven will run as part of the build.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f7
Again, see the existing gulpFile.js for this project.  It is heavily documented}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  9.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f7
if everything up to this point is working, you should be able to manually run the gulpfile in your terminal to run the tests and generate reports:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs24\loch\f6
./node_modules/gulp/bin/gulp.js test}{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f7
 }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  10.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f7
in the project's .pom, add the plugin }{{\field{\*\fldinst HYPERLINK "https://github.com/eirslett/frontend-maven-plugin" }\*\cs18\hich\af9\dbch\af4\loch\f4\scaps0\caps0\cf3\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\loch\f7
frontend-maven-plugin}}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
see the existing .pom for this, as there is a fair amount of configuration }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
most notably, it includes three executions to perform the following:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \u57356\'3f\tab}\ilvl2\ls2 \li1440\ri0\lin1440\rin0\fi-360{\rtlch \ltrch\loch
install node and npm on the system performing the build (if its not already there)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \u57356\'3f\tab}\ilvl2\ls2 \li1440\ri0\lin1440\rin0\fi-360{\rtlch \ltrch\loch
install the project's dependencies listed in the package.json}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \u57356\'3f\tab}\ilvl2\ls2 \li1440\ri0\lin1440\rin0\fi-360{\rtlch \ltrch\loch
run the gulpfile }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  11.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
in jenkins, create a step to configure and run sonarQube}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
if the project already has one, just modify the existing one to tell sonarQube where the reports are}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \u57356\'3f\tab}\ilvl2\ls2 \li1440\ri0\lin1440\rin0\fi-360{\rtlch \ltrch\loch
specifically, set sonar.javascript.lcov.reportPath and sonar.surefire.reportsPath}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  12.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
Install google chrome on the jenkins server, if it isn't already.  You need at least V59 to support headless mode.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
At the time of this writing, there was no official package with this version or higher compatible with Amazon's AMI image.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl1\ls2 \li1080\ri0\lin1080\rin0\fi-360{\rtlch \ltrch\loch
If this is still the case, you can use an unofficial package maintained by intoli.  See }{{\field{\*\fldinst HYPERLINK "https://intoli.com/blog/installing-google-chrome-on-centos/" }{\fldrslt \cf2\ul\ulc0\langfe255\lang255\lang255\rtlch \ltrch\loch
their blog post}{\rtlch \ltrch\loch
}} for more information.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af12\langfe2052\dbch\af10\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain  13.\tab}\ilvl0\ls2 \li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
When jenkins next rebuilds the project, you should see your Jasmine tests appear in sonarQube.}
\par }